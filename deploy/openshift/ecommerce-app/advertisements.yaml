apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: advertisements
    app: ecommerce
  name: advertisements 
spec:
  replicas: 1
  selector:
    matchLabels:
      service: advertisements
      app: ecommerce
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: advertisements
        app: ecommerce
    spec:
      containers:
      - name: advertisements
        image: ddtraining/advertisements-service:latest
        command: ["/bin/sh", "-c"]
        args:
          - pip install gunicorn &&
            ddtrace-run gunicorn --bind 0.0.0.0:5002 ads:app
        env:
          - name: FLASK_APP
            value: "ads.py"
          - name: FLASK_DEBUG
            value: "1"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: POSTGRES_USER
            value: "user"
          - name: POSTGRES_HOST
            value: "db"
          - name: DATADOG_SERVICE_NAME
            value: "advertisements-service"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_ANALYTICS_ENABLED
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
        ports:
          - containerPort: 5002
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: advertisements
    app: ecommerce
  name: advertisements
spec:
  ports:
  - port: 5002
    protocol: TCP
    targetPort: 5002
  selector:
    service: advertisements
    app: ecommerce
status:
